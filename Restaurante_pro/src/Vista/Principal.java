/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vista;

import Modelo.*;
import java.io.*;
import java.util.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Laboratorio
 */
public class Principal extends javax.swing.JFrame implements Runnable {

    String hora, minutos, segundos, ampm;
    Calendar calendario;
    Thread h1;
    int sw;
    /**
     * Creates new form Principal
     */
    public Archivo ptrF = null;
    public Pedido ptr2 = null;
    public Camarero ptr3 = null;
    public Mesa ptr4 = null;
    public Archivo a = new Archivo("", 0, "", 0, "");

    public Principal() throws IOException {
        initComponents();
        h1 = new Thread(this);
        h1.start();
        this.setSize(600, 516);
        this.setLocationRelativeTo(null);
        Time.setSize(534, 217);
        Meseros.setSize(540, 267);
        Meseros.setLocationRelativeTo(null);
        Pedido.setSize(858, 574);
        Pedido.setLocationRelativeTo(null);
        Menu.setSize(849, 730);
        Menu.setLocationRelativeTo(null);
        Cocina.setSize(692, 431);
        Cocina.setLocationRelativeTo(null);
        Factura.setSize(764, 569);
        Factura.setLocationRelativeTo(null);
        EstadoDePedidos.setSize(608, 418);
        EstadoDePedidos.setLocationRelativeTo(null);
        Login.setSize(600, 681);
        Login.setLocationRelativeTo(null);
        Administracion.setSize(555, 377);
        Administracion.setLocationRelativeTo(null);
        ResumenMesas.setSize(588, 509);
        ResumenMesas.setLocationRelativeTo(null);
        Jefecocina.setSize(661, 628);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Meseros = new javax.swing.JFrame();
        factura = new javax.swing.JButton();
        pedido = new javax.swing.JButton();
        E_pedido = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        FondoM = new javax.swing.JLabel();
        Pedido = new javax.swing.JFrame();
        del = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        add = new javax.swing.JButton();
        acep = new javax.swing.JButton();
        back = new javax.swing.JButton();
        m = new javax.swing.JComboBox<>();
        camar = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        Fondop = new javax.swing.JLabel();
        Menu = new javax.swing.JFrame();
        acep1 = new javax.swing.JButton();
        back1 = new javax.swing.JButton();
        cant = new javax.swing.JSpinner();
        jScrollPane2 = new javax.swing.JScrollPane();
        menu = new javax.swing.JList<>();
        jLabel1 = new javax.swing.JLabel();
        tipo = new javax.swing.JComboBox<>();
        image = new javax.swing.JLabel();
        Fondo = new javax.swing.JLabel();
        Cocina = new javax.swing.JFrame();
        jScrollPane3 = new javax.swing.JScrollPane();
        tablacocina = new javax.swing.JTable();
        timeC = new javax.swing.JButton();
        see = new javax.swing.JButton();
        end = new javax.swing.JButton();
        backC = new javax.swing.JButton();
        jComboBox3 = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jButton7 = new javax.swing.JButton();
        FondoC = new javax.swing.JLabel();
        Time = new javax.swing.JFrame();
        lbHora = new javax.swing.JLabel();
        FondoT = new javax.swing.JLabel();
        EstadoDePedidos = new javax.swing.JFrame();
        jScrollPane4 = new javax.swing.JScrollPane();
        TablaEstados = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        Editar = new javax.swing.JButton();
        fondoE = new javax.swing.JLabel();
        Factura = new javax.swing.JFrame();
        jScrollPane5 = new javax.swing.JScrollPane();
        TablaFactura = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        nmesa = new javax.swing.JComboBox<>();
        jButton6 = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        fondoF = new javax.swing.JLabel();
        Login = new javax.swing.JFrame();
        jLabel11 = new javax.swing.JLabel();
        user = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        pass = new javax.swing.JPasswordField();
        ag = new javax.swing.JButton();
        can = new javax.swing.JButton();
        fondoL = new javax.swing.JLabel();
        Administracion = new javax.swing.JFrame();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jRadioButton3 = new javax.swing.JRadioButton();
        jRadioButton4 = new javax.swing.JRadioButton();
        jRadioButton5 = new javax.swing.JRadioButton();
        jRadioButton6 = new javax.swing.JRadioButton();
        jButton8 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        ResumenMesas = new javax.swing.JFrame();
        jScrollPane6 = new javax.swing.JScrollPane();
        tablamesas = new javax.swing.JTable();
        jButton9 = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        buttonGroup1 = new javax.swing.ButtonGroup();
        Jefecocina = new javax.swing.JFrame();
        jScrollPane7 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton11 = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        admin = new javax.swing.JButton();
        cocina = new javax.swing.JButton();
        mesero = new javax.swing.JButton();
        FONDO = new javax.swing.JLabel();

        Meseros.setTitle("Meseros");
        Meseros.setResizable(false);
        Meseros.setSize(new java.awt.Dimension(540, 267));
        Meseros.getContentPane().setLayout(null);

        factura.setBackground(new java.awt.Color(255, 255, 255));
        factura.setText("Factura");
        factura.setBorder(null);
        factura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                facturaActionPerformed(evt);
            }
        });
        Meseros.getContentPane().add(factura);
        factura.setBounds(40, 120, 120, 50);

        pedido.setBackground(new java.awt.Color(255, 255, 255));
        pedido.setText("Pedido");
        pedido.setBorder(null);
        pedido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pedidoActionPerformed(evt);
            }
        });
        Meseros.getContentPane().add(pedido);
        pedido.setBounds(390, 120, 120, 50);

        E_pedido.setBackground(new java.awt.Color(255, 255, 255));
        E_pedido.setText("Estado de Pedido");
        E_pedido.setBorder(null);
        E_pedido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                E_pedidoActionPerformed(evt);
            }
        });
        Meseros.getContentPane().add(E_pedido);
        E_pedido.setBounds(200, 120, 150, 50);

        jButton1.setBackground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Volver");
        jButton1.setBorder(null);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        Meseros.getContentPane().add(jButton1);
        jButton1.setBounds(200, 200, 150, 30);

        FondoM.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/MeseroP.png"))); // NOI18N
        Meseros.getContentPane().add(FondoM);
        FondoM.setBounds(0, -30, 620, 320);

        Pedido.setTitle("Pedido");
        Pedido.setResizable(false);
        Pedido.getContentPane().setLayout(null);

        del.setBackground(new java.awt.Color(255, 255, 255));
        del.setText("Eliminar");
        del.setBorder(null);
        del.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delActionPerformed(evt);
            }
        });
        Pedido.getContentPane().add(del);
        del.setBounds(700, 140, 130, 40);

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Plato", "Cantidad", "Precio", "Total"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.Double.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(table);
        if (table.getColumnModel().getColumnCount() > 0) {
            table.getColumnModel().getColumn(1).setMinWidth(65);
            table.getColumnModel().getColumn(1).setMaxWidth(65);
            table.getColumnModel().getColumn(2).setMinWidth(75);
            table.getColumnModel().getColumn(2).setMaxWidth(75);
            table.getColumnModel().getColumn(3).setMinWidth(75);
            table.getColumnModel().getColumn(3).setMaxWidth(75);
        }

        Pedido.getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(30, 130, 530, 360);

        add.setBackground(new java.awt.Color(255, 255, 255));
        add.setText("Añadir");
        add.setBorder(null);
        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
            }
        });
        Pedido.getContentPane().add(add);
        add.setBounds(560, 140, 130, 40);

        acep.setBackground(new java.awt.Color(255, 255, 255));
        acep.setText("Aceptar");
        acep.setBorder(null);
        acep.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                acepActionPerformed(evt);
            }
        });
        Pedido.getContentPane().add(acep);
        acep.setBounds(590, 370, 90, 30);

        back.setBackground(new java.awt.Color(255, 255, 255));
        back.setText("Volver");
        back.setBorder(null);
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });
        Pedido.getContentPane().add(back);
        back.setBounds(730, 370, 80, 30);

        Pedido.getContentPane().add(m);
        m.setBounds(720, 240, 90, 22);

        camar.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Sebastian", "Jaime", "Esteban", "Perkins" }));
        camar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                camarActionPerformed(evt);
            }
        });
        Pedido.getContentPane().add(camar);
        camar.setBounds(560, 230, 130, 40);

        jLabel2.setText("Camarero");
        Pedido.getContentPane().add(jLabel2);
        jLabel2.setBounds(570, 210, 70, 16);

        jLabel4.setText("Mesa");
        Pedido.getContentPane().add(jLabel4);
        jLabel4.setBounds(720, 220, 41, 16);

        Fondop.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/PedidoP.png"))); // NOI18N
        Pedido.getContentPane().add(Fondop);
        Fondop.setBounds(0, 0, 930, 660);

        Menu.setTitle("Menú");
        Menu.setResizable(false);
        Menu.getContentPane().setLayout(null);

        acep1.setBackground(new java.awt.Color(255, 255, 255));
        acep1.setText("Aceptar");
        acep1.setBorder(null);
        acep1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                acep1ActionPerformed(evt);
            }
        });
        Menu.getContentPane().add(acep1);
        acep1.setBounds(540, 590, 110, 40);

        back1.setBackground(new java.awt.Color(255, 255, 255));
        back1.setText("Volver");
        back1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                back1ActionPerformed(evt);
            }
        });
        Menu.getContentPane().add(back1);
        back1.setBounds(540, 640, 110, 40);

        cant.setModel(new javax.swing.SpinnerNumberModel(1, 1, null, 1));
        Menu.getContentPane().add(cant);
        cant.setBounds(690, 600, 70, 22);

        menu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                menuMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(menu);

        Menu.getContentPane().add(jScrollPane2);
        jScrollPane2.setBounds(530, 200, 280, 360);

        jLabel1.setText("Cantidad");
        Menu.getContentPane().add(jLabel1);
        jLabel1.setBounds(690, 580, 70, 16);

        tipo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Platillos", "Bebidas", "Postres" }));
        tipo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tipoActionPerformed(evt);
            }
        });
        Menu.getContentPane().add(tipo);
        tipo.setBounds(560, 150, 200, 40);
        Menu.getContentPane().add(image);
        image.setBounds(50, 150, 470, 530);

        Fondo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/MenuP.png"))); // NOI18N
        Menu.getContentPane().add(Fondo);
        Fondo.setBounds(0, -20, 1480, 890);

        Cocina.setTitle("Cocina");
        Cocina.setResizable(false);
        Cocina.getContentPane().setLayout(null);

        tablacocina.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Platillo", "Cantidad"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(tablacocina);
        if (tablacocina.getColumnModel().getColumnCount() > 0) {
            tablacocina.getColumnModel().getColumn(1).setMinWidth(70);
            tablacocina.getColumnModel().getColumn(1).setMaxWidth(70);
        }

        Cocina.getContentPane().add(jScrollPane3);
        jScrollPane3.setBounds(30, 110, 410, 270);

        timeC.setBackground(new java.awt.Color(255, 255, 255));
        timeC.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Time.png"))); // NOI18N
        timeC.setBorder(null);
        timeC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                timeCActionPerformed(evt);
            }
        });
        Cocina.getContentPane().add(timeC);
        timeC.setBounds(580, 30, 70, 40);

        see.setBackground(new java.awt.Color(255, 255, 255));
        see.setText("Ver Pedido");
        see.setBorder(null);
        see.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                seeActionPerformed(evt);
            }
        });
        Cocina.getContentPane().add(see);
        see.setBounds(460, 210, 100, 40);

        end.setBackground(new java.awt.Color(255, 255, 255));
        end.setText("Terminado");
        end.setBorder(null);
        end.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                endActionPerformed(evt);
            }
        });
        Cocina.getContentPane().add(end);
        end.setBounds(580, 210, 90, 40);

        backC.setBackground(new java.awt.Color(255, 255, 255));
        backC.setText("Volver");
        backC.setBorder(null);
        backC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backCActionPerformed(evt);
            }
        });
        Cocina.getContentPane().add(backC);
        backC.setBounds(540, 350, 70, 40);

        Cocina.getContentPane().add(jComboBox3);
        jComboBox3.setBounds(460, 170, 100, 30);

        jLabel3.setText("N. Mesa");
        Cocina.getContentPane().add(jLabel3);
        jLabel3.setBounds(460, 150, 60, 16);

        jButton7.setBackground(new java.awt.Color(255, 255, 255));
        jButton7.setText("Jefe de cocina");
        jButton7.setBorder(null);
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        Cocina.getContentPane().add(jButton7);
        jButton7.setBounds(530, 290, 100, 40);

        FondoC.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/CocinaP.png"))); // NOI18N
        Cocina.getContentPane().add(FondoC);
        FondoC.setBounds(0, 0, 693, 431);

        Time.setResizable(false);
        Time.getContentPane().setLayout(null);

        lbHora.setFont(new java.awt.Font("sansserif", 1, 85)); // NOI18N
        lbHora.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbHora.setText("Time");
        Time.getContentPane().add(lbHora);
        lbHora.setBounds(0, 0, 530, 220);

        FondoT.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Reloj.png"))); // NOI18N
        Time.getContentPane().add(FondoT);
        FondoT.setBounds(0, 0, 540, 220);

        EstadoDePedidos.setResizable(false);
        EstadoDePedidos.getContentPane().setLayout(null);

        TablaEstados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mesa", "Estado"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(TablaEstados);

        EstadoDePedidos.getContentPane().add(jScrollPane4);
        jScrollPane4.setBounds(40, 120, 330, 260);

        jButton2.setBackground(new java.awt.Color(255, 255, 255));
        jButton2.setText("Volver");
        jButton2.setBorder(null);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        EstadoDePedidos.getContentPane().add(jButton2);
        jButton2.setBounds(460, 330, 80, 40);

        jButton3.setBackground(new java.awt.Color(255, 255, 255));
        jButton3.setText("Entregar");
        jButton3.setBorder(null);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        EstadoDePedidos.getContentPane().add(jButton3);
        jButton3.setBounds(450, 130, 110, 50);

        Editar.setBackground(new java.awt.Color(255, 255, 255));
        Editar.setText("Editar");
        Editar.setBorder(null);
        EstadoDePedidos.getContentPane().add(Editar);
        Editar.setBounds(450, 200, 110, 50);

        fondoE.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/EstadoP.png"))); // NOI18N
        EstadoDePedidos.getContentPane().add(fondoE);
        fondoE.setBounds(0, 0, 610, 420);

        Factura.setLocation(new java.awt.Point(0, 0));
        Factura.setResizable(false);
        Factura.getContentPane().setLayout(null);

        TablaFactura.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Plato", "Precio ", "Cantidad", "Total"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Double.class, java.lang.Integer.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane5.setViewportView(TablaFactura);
        if (TablaFactura.getColumnModel().getColumnCount() > 0) {
            TablaFactura.getColumnModel().getColumn(1).setMinWidth(80);
            TablaFactura.getColumnModel().getColumn(1).setMaxWidth(80);
            TablaFactura.getColumnModel().getColumn(2).setMinWidth(60);
            TablaFactura.getColumnModel().getColumn(2).setMaxWidth(60);
            TablaFactura.getColumnModel().getColumn(3).setMinWidth(80);
            TablaFactura.getColumnModel().getColumn(3).setMaxWidth(80);
        }

        Factura.getContentPane().add(jScrollPane5);
        jScrollPane5.setBounds(40, 140, 510, 300);

        jLabel5.setText("Total sin IVA");
        Factura.getContentPane().add(jLabel5);
        jLabel5.setBounds(600, 210, 90, 20);

        jTextField1.setEditable(false);
        Factura.getContentPane().add(jTextField1);
        jTextField1.setBounds(600, 230, 110, 30);

        jLabel6.setText("IVA");
        Factura.getContentPane().add(jLabel6);
        jLabel6.setBounds(600, 280, 20, 16);

        jTextField2.setEditable(false);
        Factura.getContentPane().add(jTextField2);
        jTextField2.setBounds(600, 300, 110, 30);

        jLabel7.setText("Propina");
        Factura.getContentPane().add(jLabel7);
        jLabel7.setBounds(600, 330, 70, 16);

        jTextField3.setEditable(false);
        Factura.getContentPane().add(jTextField3);
        jTextField3.setBounds(600, 350, 110, 30);

        jLabel8.setText("Total Neto");
        Factura.getContentPane().add(jLabel8);
        jLabel8.setBounds(600, 390, 60, 16);

        jTextField4.setEditable(false);
        Factura.getContentPane().add(jTextField4);
        jTextField4.setBounds(600, 410, 110, 30);

        jButton4.setBackground(new java.awt.Color(255, 255, 255));
        jButton4.setText("Imprimir");
        jButton4.setBorder(null);
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        Factura.getContentPane().add(jButton4);
        jButton4.setBounds(320, 490, 100, 30);

        jButton5.setBackground(new java.awt.Color(255, 255, 255));
        jButton5.setText("Volver");
        jButton5.setBorder(null);
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        Factura.getContentPane().add(jButton5);
        jButton5.setBounds(530, 490, 100, 30);

        nmesa.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { }));
        nmesa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nmesaActionPerformed(evt);
            }
        });
        Factura.getContentPane().add(nmesa);
        nmesa.setBounds(600, 170, 60, 30);

        jButton6.setBackground(new java.awt.Color(255, 255, 255));
        jButton6.setText("Ver Factura");
        jButton6.setBorder(null);
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        Factura.getContentPane().add(jButton6);
        jButton6.setBounds(110, 490, 100, 30);

        jLabel9.setText("N° de mesa");
        Factura.getContentPane().add(jLabel9);
        jLabel9.setBounds(600, 150, 90, 16);

        fondoF.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/FacturaP.png"))); // NOI18N
        Factura.getContentPane().add(fondoF);
        fondoF.setBounds(0, 0, 770, 570);

        Login.getContentPane().setLayout(null);

        jLabel11.setText("Usuario:");
        Login.getContentPane().add(jLabel11);
        jLabel11.setBounds(200, 380, 60, 16);

        user.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userActionPerformed(evt);
            }
        });
        Login.getContentPane().add(user);
        user.setBounds(190, 400, 220, 30);

        jLabel10.setText("Contraseña: ");
        Login.getContentPane().add(jLabel10);
        jLabel10.setBounds(190, 450, 100, 16);
        Login.getContentPane().add(pass);
        pass.setBounds(190, 470, 220, 30);

        ag.setBackground(new java.awt.Color(255, 255, 255));
        ag.setText("Aceptar");
        ag.setBorder(null);
        ag.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agActionPerformed(evt);
            }
        });
        Login.getContentPane().add(ag);
        ag.setBounds(240, 520, 100, 30);

        can.setBackground(new java.awt.Color(255, 255, 255));
        can.setText("Cancelar");
        can.setBorder(null);
        can.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                canActionPerformed(evt);
            }
        });
        Login.getContentPane().add(can);
        can.setBounds(230, 580, 120, 17);

        fondoL.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/loginP.png"))); // NOI18N
        Login.getContentPane().add(fondoL);
        fondoL.setBounds(0, -20, 720, 720);

        Administracion.setResizable(false);
        Administracion.getContentPane().setLayout(null);

        buttonGroup1.add(jRadioButton1);
        jRadioButton1.setText("Resumen de ventas por mesa");
        jRadioButton1.setBorder(null);
        jRadioButton1.setOpaque(false);
        jRadioButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton1ActionPerformed(evt);
            }
        });
        Administracion.getContentPane().add(jRadioButton1);
        jRadioButton1.setBounds(30, 120, 170, 30);

        buttonGroup1.add(jRadioButton2);
        jRadioButton2.setText("Total ventas del dia");
        jRadioButton2.setOpaque(false);
        Administracion.getContentPane().add(jRadioButton2);
        jRadioButton2.setBounds(30, 160, 130, 25);

        buttonGroup1.add(jRadioButton3);
        jRadioButton3.setText("Plato mas vendido");
        jRadioButton3.setOpaque(false);
        Administracion.getContentPane().add(jRadioButton3);
        jRadioButton3.setBounds(30, 190, 120, 25);

        buttonGroup1.add(jRadioButton4);
        jRadioButton4.setText("Camarero que gestiono mas numero de mesas");
        jRadioButton4.setOpaque(false);
        Administracion.getContentPane().add(jRadioButton4);
        jRadioButton4.setBounds(30, 220, 250, 25);

        buttonGroup1.add(jRadioButton5);
        jRadioButton5.setText("5 alimentos que mas se usan");
        jRadioButton5.setOpaque(false);
        Administracion.getContentPane().add(jRadioButton5);
        jRadioButton5.setBounds(30, 260, 250, 25);

        buttonGroup1.add(jRadioButton6);
        jRadioButton6.setText("5 alimentos que menos se usan");
        jRadioButton6.setOpaque(false);
        Administracion.getContentPane().add(jRadioButton6);
        jRadioButton6.setBounds(30, 300, 240, 25);

        jButton8.setBackground(new java.awt.Color(255, 255, 255));
        jButton8.setText("Aceptar");
        jButton8.setBorder(null);
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });
        Administracion.getContentPane().add(jButton8);
        jButton8.setBounds(360, 180, 110, 40);

        jButton10.setBackground(new java.awt.Color(255, 255, 255));
        jButton10.setText("Volver");
        jButton10.setBorder(null);
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });
        Administracion.getContentPane().add(jButton10);
        jButton10.setBounds(360, 250, 110, 40);

        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/AdminP.png"))); // NOI18N
        Administracion.getContentPane().add(jLabel12);
        jLabel12.setBounds(0, -10, 580, 440);

        ResumenMesas.getContentPane().setLayout(null);

        tablamesas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"1",  new Double(0.0)},
                {"2",  new Double(0.0)},
                {"3",  new Double(0.0)},
                {"4",  new Double(0.0)},
                {"5",  new Double(0.0)},
                {"6",  new Double(0.0)},
                {"7",  new Double(0.0)},
                {"8",  new Double(0.0)},
                {"9",  new Double(0.0)},
                {"10",  new Double(0.0)},
                {"11",  new Double(0.0)},
                {"12",  new Double(0.0)},
                {"13",  new Double(0.0)},
                {"14",  new Double(0.0)},
                {"15",  new Double(0.0)},
                {"16",  new Double(0.0)},
                {"17",  new Double(0.0)},
                {"18",  new Double(0.0)},
                {"19",  new Double(0.0)},
                {"20",  new Double(0.0)}
            },
            new String [] {
                "N° de mesa", "Total vendido"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane6.setViewportView(tablamesas);

        ResumenMesas.getContentPane().add(jScrollPane6);
        jScrollPane6.setBounds(30, 130, 380, 350);

        jButton9.setBackground(new java.awt.Color(255, 255, 255));
        jButton9.setText("Aceptar");
        jButton9.setBorder(null);
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });
        ResumenMesas.getContentPane().add(jButton9);
        jButton9.setBounds(460, 440, 45, 17);

        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/ventaP.png"))); // NOI18N
        ResumenMesas.getContentPane().add(jLabel13);
        jLabel13.setBounds(0, 0, 588, 510);

        Jefecocina.setResizable(false);
        Jefecocina.getContentPane().setLayout(null);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Ingrediente", "Existencias"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane7.setViewportView(jTable1);

        Jefecocina.getContentPane().add(jScrollPane7);
        jScrollPane7.setBounds(40, 130, 420, 450);

        jButton11.setBackground(new java.awt.Color(255, 255, 255));
        jButton11.setText("Aceptar");
        jButton11.setBorder(null);
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });
        Jefecocina.getContentPane().add(jButton11);
        jButton11.setBounds(510, 510, 100, 40);

        jLabel14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/JefecocinaP.png"))); // NOI18N
        Jefecocina.getContentPane().add(jLabel14);
        jLabel14.setBounds(0, -10, 750, 650);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Restaurante La Prosperidad");
        setLocation(new java.awt.Point(0, 0));
        setResizable(false);
        setSize(new java.awt.Dimension(600, 516));
        getContentPane().setLayout(null);

        admin.setBackground(new java.awt.Color(255, 255, 255));
        admin.setFont(new java.awt.Font("Liberation Serif", 1, 18)); // NOI18N
        admin.setText("Administración");
        admin.setBorder(null);
        admin.setBorderPainted(false);
        admin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adminActionPerformed(evt);
            }
        });
        getContentPane().add(admin);
        admin.setBounds(20, 270, 170, 60);

        cocina.setBackground(new java.awt.Color(255, 255, 255));
        cocina.setFont(new java.awt.Font("Liberation Serif", 1, 18)); // NOI18N
        cocina.setText("Cocina");
        cocina.setBorder(null);
        cocina.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cocinaActionPerformed(evt);
            }
        });
        getContentPane().add(cocina);
        cocina.setBounds(220, 270, 170, 60);

        mesero.setBackground(new java.awt.Color(255, 255, 255));
        mesero.setFont(new java.awt.Font("Liberation Serif", 1, 18)); // NOI18N
        mesero.setText("Meseros");
        mesero.setBorder(null);
        mesero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                meseroActionPerformed(evt);
            }
        });
        getContentPane().add(mesero);
        mesero.setBounds(410, 270, 170, 60);

        FONDO.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Fondo2.png"))); // NOI18N
        getContentPane().add(FONDO);
        FONDO.setBounds(0, -70, 600, 650);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void meseroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_meseroActionPerformed
        this.setVisible(false);
        Pedido p = ptr2;
        int sw = 0;
        while (p != null && sw == 0) {
            if (p.estado == true && p.entregado == false) {
                sw = 1;
                ImageIcon Img = new ImageIcon(getClass().getResource("/Imagenes/notification.png"));
                E_pedido.setIcon(Img);
            }
            p = p.link;
        }
        Meseros.setVisible(true);
    }//GEN-LAST:event_meseroActionPerformed

    private void pedidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pedidoActionPerformed
        Meseros.setVisible(false);
        Pedido.setVisible(true);
    }//GEN-LAST:event_pedidoActionPerformed

    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
        Pedido.setVisible(false);
        Meseros.setVisible(true);
    }//GEN-LAST:event_backActionPerformed

    private void addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActionPerformed
        Pedido.setVisible(false);
        Menu.setVisible(true);
        ImageIcon Img = new ImageIcon(getClass().getResource("/Imagenes/nulo.png"));
        image.setIcon(Img);
    }//GEN-LAST:event_addActionPerformed
    void lista(String op) {
        DefaultListModel model = new DefaultListModel();
        File archivo = new File("Menu.txt");
        FileReader fr = null;
        try {
            fr = new FileReader(archivo);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        }
        try (BufferedReader br = new BufferedReader(fr)) {
            String c;
            while ((c = br.readLine()) != null) {
                StringTokenizer st = new StringTokenizer(c, ",");
                String name = st.nextElement().toString();
                double prec = Double.parseDouble(st.nextElement().toString());
                String tipo = st.nextElement().toString();
                if (op.equals(tipo)) {
                    model.addElement(name);
                }
            }
            menu.setModel(model);
        } catch (IOException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    private void tipoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tipoActionPerformed
        String op = tipo.getSelectedItem().toString();
        switch (op) {
            case "Platillos":
                lista(op);
                break;
            case "Bebidas":
                lista(op);
                break;
            case "Postres":
                lista(op);
                break;
        }
    }//GEN-LAST:event_tipoActionPerformed

    private void back1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_back1ActionPerformed
        Menu.setVisible(false);
        Pedido.setVisible(true);
    }//GEN-LAST:event_back1ActionPerformed

    private void menuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuMouseClicked
        String op = menu.getSelectedValue();
        if (!op.equals("")) {
            if (!op.contains(" ")) {
                ImageIcon Img = new ImageIcon(getClass().getResource("/Imagenes/" + op + ".png"));
                image.setIcon(Img);
            } else {
                String aux = "";
                for (int i = 0; i < op.length(); i++) {
                    if (op.charAt(i) != ' ') {
                        aux += op.charAt(i);
                    }
                }
                ImageIcon Img = new ImageIcon(getClass().getResource("/Imagenes/" + aux + ".png"));
                image.setIcon(Img);
            }
        }
    }//GEN-LAST:event_menuMouseClicked

    private void cocinaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cocinaActionPerformed
        this.setVisible(false);
        Cocina.setVisible(true);
    }//GEN-LAST:event_cocinaActionPerformed

    private void backCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backCActionPerformed
        Cocina.setVisible(false);
        this.setVisible(true);
    }//GEN-LAST:event_backCActionPerformed

    private void timeCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_timeCActionPerformed
        Time.setVisible(true);
    }//GEN-LAST:event_timeCActionPerformed

    private void acep1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_acep1ActionPerformed
        Inventario g = new Inventario("", 0, 0);
        int c = Integer.parseInt(cant.getValue().toString());
        String op = menu.getSelectedValue();
        File archivo = new File("Menu.txt");
        FileReader fr = null;
        boolean sw = false;
        try {
            fr = new FileReader(archivo);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        }
        BufferedReader br = new BufferedReader(fr);
        String aux;
        try {
            while ((aux = br.readLine()) != null) {
                StringTokenizer st = new StringTokenizer(aux, ",");
                String name = st.nextElement().toString();
                double prec = Double.parseDouble(st.nextElement().toString());
                String tipo = st.nextElement().toString();
                int vent = Integer.parseInt(st.nextElement().toString());
                if (name.equals(op)) {
                    File bodega = new File("Inventario.txt");
                    FileReader nfr = new FileReader(bodega);
                    BufferedReader nbf = new BufferedReader(fr);
                    String d;
                    while (st.hasMoreElements() && sw == false) {
                        StringTokenizer nt = new StringTokenizer(st.nextElement().toString(), ":");
                        String ingrediente = nt.nextElement().toString();
                        int cant = Integer.parseInt(nt.nextElement().toString());
                        sw = g.Inventario(ingrediente, cant, c, 0);
                    }
                    if (sw == false) {
                        DefaultTableModel model = (DefaultTableModel) table.getModel();
                        model.addRow(new Object[]{name, c, prec, (c * prec)});
                        Pedido.setVisible(true);
                        Menu.setVisible(false);
                    } else {
                        JOptionPane.showMessageDialog(null, "No hay suficientes ingredientes", "Advertencia", JOptionPane.WARNING_MESSAGE);
                    }
                }

            }

        } catch (IOException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_acep1ActionPerformed

    private void acepActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_acepActionPerformed
        Plato ptr = null;
        DefaultTableModel model = (DefaultTableModel) table.getModel();
        if (m.getSelectedItem() == null) {
            JOptionPane.showMessageDialog(null, "Por favor seleccione una mesa");
        } else {
            String mesa = m.getSelectedItem().toString();
            Pedido o = ptr2;
            int sw = 0;
            while (o != null && sw == 0) {
                if (o.mesa.equals(mesa)) {
                    JOptionPane.showMessageDialog(null, "La mesa seleccionda esta ocupada por favor seleccione otra");
                    sw = 1;
                }
                o = o.link;
            }
            if (sw == 0) {
                int n = model.getRowCount();
                for (int i = 0; i < n; i++) {
                    String nombre = model.getValueAt(i, 0).toString();
                    int cantidad = Integer.parseInt(model.getValueAt(i, 1).toString());
                    double precio = Double.parseDouble(model.getValueAt(i, 2).toString());
                    Plato q = new Plato(nombre, precio, cantidad);
                    if (ptr == null) {
                        ptr = q;
                    } else {
                        Plato s = ptr;
                        while (s.link != null) {
                            s = s.link;
                        }
                        s.link = q;
                    }
                }
                String cam = camar.getSelectedItem().toString();
                if (ptr3 == null) {
                    Camarero camarero = new Camarero(cam, 1);
                    ptr3 = camarero;
                } else {
                    Camarero s = ptr3;
                    while ((s.link != null) && !(s.nombre.equals(cam))) {
                        s = s.link;
                    }
                    if (!s.nombre.equals(cam)) {
                        Camarero camarero = new Camarero(cam, 1);
                        s.link = camarero;
                    } else {
                        s.venta = s.venta + 1;
                    }
                }
                Camarero p = null;
                p = ptr3;
                int sw2 = 0;
                while (p != null && sw2 == 0) {
                    if (p.nombre.equals(cam)) {
                        sw2 = 1;
                        Camarero q = p;
                        int hora, minutos, segundos;
                        Calendar c = new GregorianCalendar();
                        hora = c.get(Calendar.HOUR_OF_DAY);
                        minutos = c.get(Calendar.MINUTE);
                        segundos = c.get(Calendar.SECOND);
                        Pedido f = new Pedido(q, mesa, ptr, hora, minutos, segundos);
                        if (ptr2 == null) {
                            ptr2 = f;
                        } else {
                            Pedido z = ptr2;
                            while (z.link != null) {
                                z = z.link;
                            }
                            z.link = f;
                        }
                        jComboBox3.addItem(f.mesa);
                    }
                    p = p.link;
                }

                JOptionPane.showMessageDialog(null, "Su pedido fue hecho con exito");
                Pedido.setVisible(false);
                this.setVisible(true);
                model.setRowCount(0);

            }
        }
    }//GEN-LAST:event_acepActionPerformed

    private void delActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delActionPerformed
        DefaultTableModel model = (DefaultTableModel) table.getModel();
        int indiceTabla = table.getSelectedRow();
        if (indiceTabla != -1) {
            model.removeRow(indiceTabla);
        }
    }//GEN-LAST:event_delActionPerformed

    private void camarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_camarActionPerformed
        m.removeAllItems();
        String op = camar.getSelectedItem().toString();
        int X = 0, Y = 0;
        switch (op) {
            case "Sebastian":
                X = 1;
                Y = 5;
                break;
            case "Jaime":
                X = 6;
                Y = 10;
                break;
            case "Esteban":
                X = 11;
                Y = 15;
                break;
            case "Perkins":
                X = 16;
                Y = 20;
                break;

        }
        for (int i = X; i <= Y; i++) {
            m.addItem(i + "");
        }
    }//GEN-LAST:event_camarActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        Meseros.setVisible(false);
        this.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void seeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_seeActionPerformed
        // TODO add your handling code here:
        if (jComboBox3.getSelectedItem() != null) {
            String mesa = jComboBox3.getSelectedItem().toString();
            Pedido r = ptr2;
            DefaultTableModel model = (DefaultTableModel) tablacocina.getModel();
            model.setRowCount(0);
            int sw = 0;
            while (r != null && sw == 0) {
                if (r.mesa.equals(mesa)) {
                    sw = 1;
                    Plato p = r.plato;
                    while (p != null) {
                        model.addRow(new Object[]{p.nombre, p.cantidad});
                        p = p.link;
                    }
                }
                r = r.link;
            }
        } else {
            JOptionPane.showMessageDialog(null, "No hay ningun pedido seleccionado");
        }
    }//GEN-LAST:event_seeActionPerformed

    private void endActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_endActionPerformed
        if (jComboBox3.getSelectedItem() != null) {
            Inventario s = null;
            String mesa = jComboBox3.getSelectedItem().toString();
            Pedido u = ptr2;
            boolean sw = false;
            while (u != null && sw == false) {
                if (u.mesa.equals(mesa)) {
                    sw = true;
                    u.estado = true;
                    Plato p = u.plato;
                    try {
                        ptrF = a.ReadFile(null);
                    } catch (IOException ex) {
                        Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    Archivo h = ptrF;
                    ptrF = a.UpdateListFile(h, u);
                    try {
                        a.WriteFile(ptrF);
                    } catch (IOException ex) {
                        Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    Inventario a = new Inventario("", 0, 0);
                    Inventario ptr = null;
                    try {
                        ptr = a.readIn();
                    } catch (IOException ex) {
                        Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    Inventario q = ptr;
                    ptr = a.UpdateListIn(ptrF, q, p);
                    try {
                        a.WriteIn(ptr);
                    } catch (IOException ex) {
                        Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
                    }

                }
                u = u.link;
            }
            jComboBox3.removeItem(mesa);
            nmesa.addItem(mesa);
            DefaultTableModel model = (DefaultTableModel) tablacocina.getModel();
            model.setRowCount(0);
        } else {
            JOptionPane.showMessageDialog(null, "No hay ningun pedido seleccionado");
        }
    }//GEN-LAST:event_endActionPerformed

    private void E_pedidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_E_pedidoActionPerformed
        // TODO add your handling code here:
        Meseros.setVisible(false);
        EstadoDePedidos.setVisible(true);
        DefaultTableModel model = (DefaultTableModel) TablaEstados.getModel();
        model.setRowCount(0);
        Pedido l = ptr2;
        String estado1;
        while (l != null) {
            if (l.estado == true) {
                estado1 = "Terminado";
            } else {
                estado1 = "En proceso";
            }
            model.addRow(new Object[]{l.mesa, estado1});
            l = l.link;
        }
    }//GEN-LAST:event_E_pedidoActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        this.setVisible(true);
        E_pedido.setIcon(null);
        EstadoDePedidos.setVisible(false);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        Factura.setVisible(false);
        this.setVisible(true);
    }//GEN-LAST:event_jButton5ActionPerformed

    private void nmesaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nmesaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nmesaActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) TablaFactura.getModel();
        model.setRowCount(0);
        if (nmesa.getSelectedItem() != null) {
            String op = nmesa.getSelectedItem().toString();
            Pedido p = ptr2;
            int sw = 0;
            String nombre;
            if (Integer.parseInt(op) <= 5) {
                nombre = "Sebastian";
            } else if (Integer.parseInt(op) > 5 && Integer.parseInt(op) <= 10) {
                nombre = "Jaime";
            } else if (Integer.parseInt(op) > 10 && Integer.parseInt(op) <= 15) {
                nombre = "Esteban";
            } else {
                nombre = "Perkins";
            }
            Camarero c = ptr3;
            Camarero el = null;
            while (c != null) {
                if (c.nombre.equals(nombre)) {
                    el = c;
                }
                c = c.link;
            }
            while (p != null && sw == 0) {
                if (p.mesa.equals(op)) {
                    if (ptr4 == null) {
                        Mesa mesa = new Mesa(op, el, p);
                        ptr4 = mesa;
                    } else {
                        Mesa s = ptr4;
                        while ((s.link != null) && !(s.codigo.equals(op))) {
                            s = s.link;
                        }
                        if (!s.codigo.equals(op)) {
                            Mesa mesa = new Mesa(op, el, p);
                            s.link = mesa;
                        } else {
                            Pedido temp = s.venta;
                            while (temp.link != null) {
                                temp = temp.link;
                            }
                            temp.link = p;
                        }
                    }
                    Mesa g = ptr4;
                    int cont = 1;
                    while (g != null) {
                        System.out.println("Mesa " + g.codigo);
                        Pedido k = g.venta;
                        int cont2 = 1;
                        while (k != null) {
                            System.out.println("Pedido" + cont2);
                            Plato f = k.plato;
                            while (f != null) {
                                System.out.println(f.nombre + " : " + f.cantidad);
                                f = f.link;
                            }
                            k = k.link;
                            cont2 += 1;
                        }
                        cont += 1;
                        g = g.link;
                    }
                    sw = 1;
                    Plato q = p.plato;
                    while (q != null) {
                        model.addRow(new Object[]{q.nombre, q.cantidad, q.precio, (q.cantidad * q.precio)});
                        q = q.link;
                    }
                }
                p = p.link;
            }
            double tot = 0;
            int r = model.getRowCount();
            for (int i = 0; i < r; i++) {
                tot += Double.parseDouble(model.getValueAt(i, 3).toString());
            }
            jTextField1.setText(tot + "");
            double iva = tot * 0.19;
            jTextField2.setText(iva + "");
            double propina = tot * 0.10;
            jTextField3.setText(propina + "");
            double totalneto = tot + propina + iva;
            jTextField4.setText(totalneto + "");
        } else {
            JOptionPane.showMessageDialog(null, "No ha seleccionado ninguna mesa");
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void facturaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_facturaActionPerformed
        // TODO add your handling code here:
        Meseros.setVisible(false);
        Factura.setVisible(true);
    }//GEN-LAST:event_facturaActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        Pedido p = ptr2;
        Pedido antp = null;
        Mesa x = ptr4;
        while (x != null) {
            if (x.codigo.equals(nmesa.getSelectedItem().toString())) {
                x.total += Double.parseDouble(jTextField4.getText());
            }
            x = x.link;
        }
        String mesa = nmesa.getSelectedItem().toString();
        if (Integer.parseInt(mesa) != -1) {
            while (!(p.mesa.equals(mesa)) && p != null) {
                antp = p;
                p = p.link;
            }
            if (p.mesa.equals(mesa)) {
                if (p == ptr2) {
                    ptr2 = p.link;
                } else {
                    antp.link = p.link;
                }
                p.link = null;
            }
        }
        DefaultTableModel model = (DefaultTableModel) TablaFactura.getModel();
        model.setRowCount(0);
        jTextField1.setText("");
        jTextField2.setText("");
        jTextField3.setText("");
        jTextField4.setText("");
        nmesa.removeItem(mesa);

    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        DefaultTableModel model = (DefaultTableModel) TablaEstados.getModel();
        int op = TablaEstados.getSelectedRow();
        if (op == -1) {
            JOptionPane.showMessageDialog(null, "Indique una orden", "Advertencia", JOptionPane.WARNING_MESSAGE);
        } else {
            String mesa = model.getValueAt(op, 0).toString();
            Pedido p = ptr2;
            boolean sw = false;
            int hora = 0, nhora = 0, minuto = 0, nminuto = 0, segundo = 0, nsegundo = 0;
            while (p != null && sw == false) {
                if (p.mesa.equals(mesa)) {
                    sw = true;
                    p.entregado = true;
                    hora = p.hora;
                    minuto = p.minuto;
                    segundo = p.segundo;
                }
                p = p.link;
            }
            Calendar c = new GregorianCalendar();
            nhora = c.get(Calendar.HOUR_OF_DAY) - hora;
            nminuto = c.get(Calendar.MINUTE) - minuto;
            nsegundo = c.get(Calendar.SECOND) - segundo;
            if (nhora < 0) {
                nhora = nhora * -1;
            }
            if (nminuto < 0) {
                nminuto = nminuto * -1;
            }
            if (nsegundo < 0) {
                nsegundo = nsegundo * -1;
            }
            JOptionPane.showMessageDialog(null, "El pedido tomó " + nhora + " hora(s), " + nminuto + " minuto(s) y " + nsegundo + " segundos", "Información", JOptionPane.INFORMATION_MESSAGE);
            model.removeRow(op);
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void userActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_userActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        sw = 1;
        Login.setVisible(true);
        Cocina.setVisible(false);
    }//GEN-LAST:event_jButton7ActionPerformed

    private void adminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adminActionPerformed
        sw = 0;
        Login.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_adminActionPerformed
    
    private void canActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_canActionPerformed
        if (sw == 1) {
            Login.setVisible(false);
            Cocina.setVisible(true);
        } else {
            Login.setVisible(false);
            this.setVisible(true);
        }
    }//GEN-LAST:event_canActionPerformed

    private void agActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agActionPerformed
        if (user.getText().equals("yo") && pass.getText().equals("1234")) {
            System.out.println("Oka");
            Login.setVisible(false);
            if (sw == 0) {
                Administracion.setVisible(true);
            }else{
                DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
                File inventario = new File("Inventario.txt");
                FileReader fr = null;
                try {
                    fr = new FileReader(inventario);
                } catch (FileNotFoundException ex) {
                    Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
                }
                BufferedReader br = new BufferedReader(fr);
                String c ;
                try {
                    while((c=br.readLine()) != null){
                        StringTokenizer st = new StringTokenizer(c , ",");
                        String nombre = st.nextElement().toString();
                        int cant = Integer.parseInt(st.nextElement().toString());
                        model.addRow(new Object[]{nombre, cant});
                    }
                } catch (IOException ex) {
                    Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
                }
                try {
                    br.close();
                } catch (IOException ex) {
                    Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
                }
                Jefecocina.setVisible(true);
            }
            
        } else {
            if (!user.getText().equals("yo")) {
                JOptionPane.showMessageDialog(null, "Usuario Invalido", "Advertencia", JOptionPane.WARNING_MESSAGE);
            } else if (!pass.getText().equals("1234")) {
                JOptionPane.showMessageDialog(null, "Contraseña Invalida", "Advertencia", JOptionPane.WARNING_MESSAGE);
            }
        }
    }//GEN-LAST:event_agActionPerformed

    private void jRadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButton1ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) tablamesas.getModel();
        Mesa s;
        String t;
        if (jRadioButton1.isSelected()) {
            Administracion.setVisible(false);
            ResumenMesas.setVisible(true);
            s = ptr4;
            while (s != null) {
                for (int i = 1; i < 21; i++) {
                    t = i + "";
                    if (s.codigo.equals(t)) {
                        model.setValueAt(s.total, (i - 1), 1);
                    }
                }
                s = s.link;
            }
        } else {
            if (jRadioButton2.isSelected()) {
                Double Total = 0.0;
                s = ptr4;
                while (s != null) {
                    for (int i = 1; i < 21; i++) {
                        t = i + "";
                        if (s.codigo.equals(t)) {
                            model.setValueAt(s.total, (i - 1), 1);
                            Total += s.total;
                        }
                    }
                    s = s.link;
                }
                JOptionPane.showMessageDialog(null, "El total de ventas del dia es:" + Total);
            } else {
                if (jRadioButton3.isSelected()) {
                    Archivo e = ptrF.link;
                    String nombremayor = ptrF.nombre;
                    int numeromayor = ptrF.venta;
                    while (e != null) {
                        if (e.venta > numeromayor) {
                            numeromayor = e.venta;
                            nombremayor = e.nombre;
                        }
                        e = e.link;
                    }
                    JOptionPane.showMessageDialog(null, "El plato que mas se vendio fue:" + nombremayor);
                } else {
                    if (jRadioButton4.isSelected()) {
                        Camarero g = ptr3.link;
                        String camareromayor = ptr3.nombre;
                        int numerodemesas = ptr3.venta;
                        while (g != null) {
                            if (g.venta > numerodemesas) {
                                camareromayor = g.nombre;
                                numerodemesas = g.venta;
                            }
                            g = g.link;
                        }
                        JOptionPane.showMessageDialog(null, "El camarero que atendio mas mesas fue:" + camareromayor);
                    } else {
                        if (jRadioButton5.isSelected()) {
                            Inventario a = new Inventario("", 0, 0);
                            Inventario ptr = null;
                            try {
                                ptr = a.readIn();
                            } catch (IOException ex) {
                                Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
                            }
                            String Primero = BuscarMayor(ptr);
                            JOptionPane.showMessageDialog(null, "El ingredientes mas usado es:"+Primero+".");
                        }else{
                            if (jRadioButton6.isSelected()) {
                                Inventario a = new Inventario("", 0, 0);
                            Inventario ptr = null;
                            try {
                                ptr = a.readIn();
                            } catch (IOException ex) {
                                Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
                            }
                            String Primerom = BuscarMenor(ptr);
                            JOptionPane.showMessageDialog(null, "El ingredientes menos usado fue:"+Primerom+".");
                            }
                        }
                    }
                }
            }
        }

    }//GEN-LAST:event_jButton8ActionPerformed
    public String BuscarMayor(Inventario ptr) {
        Inventario t = ptr.link;
        int MV = ptr.venta;
        String NMV = ptr.ingrediente;
        while (t != null) {
            if (MV < t.venta) {
                MV = t.venta;
                NMV = t.ingrediente;
            }
            t = t.link;
        }
        return NMV;
    }

    public String BuscarMenor(Inventario ptr) {
        Inventario t = ptr.link;
        int MV = ptr.venta;
        String NMV = ptr.ingrediente;
        while (t != null) {
            if (MV > t.venta) {
                MV = t.venta;
                NMV = t.ingrediente;
            }
            t = t.link;
        }
        return NMV;
    }
    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
        ResumenMesas.setVisible(false);
        Administracion.setVisible(true);
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        // TODO add your handling code here:
        Administracion.setVisible(false);
        this.setVisible(true);
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        Jefecocina.setVisible(false);
        Cocina.setVisible(true);
    }//GEN-LAST:event_jButton11ActionPerformed
    public void run() {
        Thread ct = Thread.currentThread();
        while (ct == h1) {
            calcula();
            lbHora.setText(hora + ":" + minutos + ":" + segundos + " " + ampm);
            try {
                Thread.sleep(1000);
            } catch (InterruptedException e) {
            }
        }
    }

    public void calcula() {
        Calendar calendario = new GregorianCalendar();
        Date fechaHoraActual = new Date();
        calendario.setTime(fechaHoraActual);
        ampm = calendario.get(Calendar.AM_PM) == Calendar.AM ? "AM" : "PM";
        if (ampm.equals("PM")) {
            int h = calendario.get(Calendar.HOUR_OF_DAY) - 12;
            hora = h > 9 ? "" + h : "0" + h;
        } else {
            hora = calendario.get(Calendar.HOUR_OF_DAY) > 9 ? "" + calendario.get(Calendar.HOUR_OF_DAY) : "0" + calendario.get(Calendar.HOUR_OF_DAY);
        }
        minutos = calendario.get(Calendar.MINUTE) > 9 ? "" + calendario.get(Calendar.MINUTE) : "0" + calendario.get(Calendar.MINUTE);
        segundos = calendario.get(Calendar.SECOND) > 9 ? "" + calendario.get(Calendar.SECOND) : "0" + calendario.get(Calendar.SECOND);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    Thread.sleep(3500);
                } catch (Exception e) {
                }
                try {
                    new Principal().setVisible(true);
                } catch (IOException ex) {
                    Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JFrame Administracion;
    private javax.swing.JFrame Cocina;
    private javax.swing.JButton E_pedido;
    private javax.swing.JButton Editar;
    private javax.swing.JFrame EstadoDePedidos;
    private javax.swing.JLabel FONDO;
    private javax.swing.JFrame Factura;
    private javax.swing.JLabel Fondo;
    private javax.swing.JLabel FondoC;
    private javax.swing.JLabel FondoM;
    private javax.swing.JLabel FondoT;
    private javax.swing.JLabel Fondop;
    private javax.swing.JFrame Jefecocina;
    private javax.swing.JFrame Login;
    private javax.swing.JFrame Menu;
    private javax.swing.JFrame Meseros;
    private javax.swing.JFrame Pedido;
    private javax.swing.JFrame ResumenMesas;
    private javax.swing.JTable TablaEstados;
    private javax.swing.JTable TablaFactura;
    private javax.swing.JFrame Time;
    private javax.swing.JButton acep;
    private javax.swing.JButton acep1;
    private javax.swing.JButton add;
    private javax.swing.JButton admin;
    private javax.swing.JButton ag;
    private javax.swing.JButton back;
    private javax.swing.JButton back1;
    private javax.swing.JButton backC;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox<String> camar;
    private javax.swing.JButton can;
    private javax.swing.JSpinner cant;
    private javax.swing.JButton cocina;
    private javax.swing.JButton del;
    private javax.swing.JButton end;
    private javax.swing.JButton factura;
    private javax.swing.JLabel fondoE;
    private javax.swing.JLabel fondoF;
    private javax.swing.JLabel fondoL;
    private javax.swing.JLabel image;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JComboBox<String> jComboBox3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JRadioButton jRadioButton3;
    private javax.swing.JRadioButton jRadioButton4;
    private javax.swing.JRadioButton jRadioButton5;
    private javax.swing.JRadioButton jRadioButton6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JLabel lbHora;
    private javax.swing.JComboBox<String> m;
    private javax.swing.JList<String> menu;
    private javax.swing.JButton mesero;
    private javax.swing.JComboBox<String> nmesa;
    private javax.swing.JPasswordField pass;
    private javax.swing.JButton pedido;
    private javax.swing.JButton see;
    private javax.swing.JTable tablacocina;
    private javax.swing.JTable tablamesas;
    private javax.swing.JTable table;
    private javax.swing.JButton timeC;
    private javax.swing.JComboBox<String> tipo;
    private javax.swing.JTextField user;
    // End of variables declaration//GEN-END:variables
}
